Description: This is the Stack Description
Resources:
  lambdaRoleC844FDB1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: Lambda role for ts-lambda
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/ReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      RoleName: ts-lambda-lambda-role-develop
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/lambdaRole/Resource
  lambdaExecutionAccess82ECF6E2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: lambdaExecutionAccess
      Roles:
        - Ref: lambdaRoleC844FDB1
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/lambdaExecutionAccess/Resource
  mycdkvpc037DA4AF:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/Resource
  mycdkvpcprivatesubnet1Subnet1Subnet2AC575F3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      AvailabilityZone: ap-southeast-2a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet1
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet1/Subnet
  mycdkvpcprivatesubnet1Subnet1RouteTable177610F7:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet1
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet1/RouteTable
  mycdkvpcprivatesubnet1Subnet1RouteTableAssociation77852D9C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet1RouteTable177610F7
      SubnetId:
        Ref: mycdkvpcprivatesubnet1Subnet1Subnet2AC575F3
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet1/RouteTableAssociation
  mycdkvpcprivatesubnet1Subnet1DefaultRoute59820BDE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet1RouteTable177610F7
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: mycdkvpcpublicsubnet1Subnet1NatInstanceFAD98FD2
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet1/DefaultRoute
  mycdkvpcprivatesubnet1Subnet2Subnet31DF6881:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      AvailabilityZone: ap-southeast-2b
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet2
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet2/Subnet
  mycdkvpcprivatesubnet1Subnet2RouteTableACCA9D4B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet2
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet2/RouteTable
  mycdkvpcprivatesubnet1Subnet2RouteTableAssociation23019B28:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet2RouteTableACCA9D4B
      SubnetId:
        Ref: mycdkvpcprivatesubnet1Subnet2Subnet31DF6881
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet2/RouteTableAssociation
  mycdkvpcprivatesubnet1Subnet2DefaultRouteBBC0D191:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet2RouteTableACCA9D4B
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: mycdkvpcpublicsubnet1Subnet1NatInstanceFAD98FD2
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet2/DefaultRoute
  mycdkvpcprivatesubnet1Subnet3Subnet59A74060:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      AvailabilityZone: ap-southeast-2c
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet3
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet3/Subnet
  mycdkvpcprivatesubnet1Subnet3RouteTableC7B42A9E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet3
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet3/RouteTable
  mycdkvpcprivatesubnet1Subnet3RouteTableAssociation63708403:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet3RouteTableC7B42A9E
      SubnetId:
        Ref: mycdkvpcprivatesubnet1Subnet3Subnet59A74060
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet3/RouteTableAssociation
  mycdkvpcprivatesubnet1Subnet3DefaultRouteE518E8A6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet3RouteTableC7B42A9E
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: mycdkvpcpublicsubnet1Subnet1NatInstanceFAD98FD2
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/private-subnet-1Subnet3/DefaultRoute
  mycdkvpcpublicsubnet1Subnet1Subnet8383DBBA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      AvailabilityZone: ap-southeast-2a
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1/Subnet
  mycdkvpcpublicsubnet1Subnet1RouteTableE1ABF705:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1/RouteTable
  mycdkvpcpublicsubnet1Subnet1RouteTableAssociation160A4CBB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet1RouteTableE1ABF705
      SubnetId:
        Ref: mycdkvpcpublicsubnet1Subnet1Subnet8383DBBA
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1/RouteTableAssociation
  mycdkvpcpublicsubnet1Subnet1DefaultRoute1255C1C4:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet1RouteTableE1ABF705
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: mycdkvpcIGW4220D5A9
    DependsOn:
      - mycdkvpcVPCGW2444B783
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1/DefaultRoute
  mycdkvpcpublicsubnet1Subnet1NatInstanceInstanceProfileC4D345CB:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: mycdkvpcNatRoleED326004
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1/NatInstance/InstanceProfile
  mycdkvpcpublicsubnet1Subnet1NatInstanceFAD98FD2:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-southeast-2a
      IamInstanceProfile:
        Ref: mycdkvpcpublicsubnet1Subnet1NatInstanceInstanceProfileC4D345CB
      ImageId: ami-0083b06a5ab61eabf
      InstanceType: t2.micro
      SecurityGroupIds:
        - Fn::GetAtt:
            - mycdkvpcNatSecurityGroupADDE007A
            - GroupId
      SourceDestCheck: false
      SubnetId:
        Ref: mycdkvpcpublicsubnet1Subnet1Subnet8383DBBA
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1/NatInstance
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - mycdkvpcNatRoleED326004
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet1/NatInstance/Resource
  mycdkvpcpublicsubnet1Subnet2SubnetE104EC20:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      AvailabilityZone: ap-southeast-2b
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet2
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet2/Subnet
  mycdkvpcpublicsubnet1Subnet2RouteTable3099F008:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet2
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet2/RouteTable
  mycdkvpcpublicsubnet1Subnet2RouteTableAssociation2ECC1C4A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet2RouteTable3099F008
      SubnetId:
        Ref: mycdkvpcpublicsubnet1Subnet2SubnetE104EC20
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet2/RouteTableAssociation
  mycdkvpcpublicsubnet1Subnet2DefaultRoute98E2F656:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet2RouteTable3099F008
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: mycdkvpcIGW4220D5A9
    DependsOn:
      - mycdkvpcVPCGW2444B783
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet2/DefaultRoute
  mycdkvpcpublicsubnet1Subnet3Subnet0A0916F8:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      AvailabilityZone: ap-southeast-2c
      CidrBlock: 10.0.5.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet3
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet3/Subnet
  mycdkvpcpublicsubnet1Subnet3RouteTableF66E029F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet3
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet3/RouteTable
  mycdkvpcpublicsubnet1Subnet3RouteTableAssociation8CC3E8C8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet3RouteTableF66E029F
      SubnetId:
        Ref: mycdkvpcpublicsubnet1Subnet3Subnet0A0916F8
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet3/RouteTableAssociation
  mycdkvpcpublicsubnet1Subnet3DefaultRouteD14D6107:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet3RouteTableF66E029F
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: mycdkvpcIGW4220D5A9
    DependsOn:
      - mycdkvpcVPCGW2444B783
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/public-subnet-1Subnet3/DefaultRoute
  mycdkvpcIGW4220D5A9:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/IGW
  mycdkvpcVPCGW2444B783:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: mycdkvpc037DA4AF
      InternetGatewayId:
        Ref: mycdkvpcIGW4220D5A9
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/VPCGW
  mycdkvpcNatSecurityGroupADDE007A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for NAT instances
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:ALL TRAFFIC
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/NatSecurityGroup/Resource
  mycdkvpcNatRoleED326004:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: ts-lambda-stack-develop/my-cdk-vpc
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/my-cdk-vpc/NatRole/Resource
  lambdaSG81E771DE:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ts-lambda-stack-develop/lambdaSG
      GroupName: ts-lambda-lambda-security-group-develop
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - mycdkvpc037DA4AF
              - CidrBlock
          Description: Allow internal VPC traffic
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/lambdaSG/Resource
  lambdaLayer857D4AF4:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket: cdk-hnb659fds-assets-084525917613-ap-southeast-2
        S3Key: c0cf70869503986cc6df82a39e1b51c690e04975190a2a04d6a765485868d5d8.zip
      CompatibleRuntimes:
        - nodejs14.x
      Description: Lambda Layer for ts-lambda
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/lambdaLayer/Resource
      aws:asset:path: asset.c0cf70869503986cc6df82a39e1b51c690e04975190a2a04d6a765485868d5d8
      aws:asset:is-bundled: false
      aws:asset:property: Content
  demofunction1function0E1FA0AD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-084525917613-ap-southeast-2
        S3Key: 8c26cde7c71a3b37b268a35d4ab339f843666f787a396809ef8233fb61f26715.zip
      Role:
        Fn::GetAtt:
          - lambdaRoleC844FDB1
          - Arn
      Environment:
        Variables:
          REGION: ap-southeast-2
          ENV: develop
          GIT_BRANCH: develop
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: ts-lambda-demo-function-1-develop
      Handler: index.handler
      Layers:
        - Ref: lambdaLayer857D4AF4
      MemorySize: 2048
      Runtime: nodejs14.x
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSG81E771DE
              - GroupId
        SubnetIds:
          - Ref: mycdkvpcprivatesubnet1Subnet1Subnet2AC575F3
          - Ref: mycdkvpcprivatesubnet1Subnet2Subnet31DF6881
          - Ref: mycdkvpcprivatesubnet1Subnet3Subnet59A74060
    DependsOn:
      - lambdaRoleC844FDB1
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/demo-function-1-function/Resource
      aws:asset:path: asset.8c26cde7c71a3b37b268a35d4ab339f843666f787a396809ef8233fb61f26715
      aws:asset:is-bundled: true
      aws:asset:property: Code
  private1FunctionUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn:
        Fn::GetAtt:
          - demofunction1function0E1FA0AD
          - Arn
      AuthType: AWS_IAM
      Cors:
        AllowMethods:
          - GET
        AllowOrigins:
          - "*"
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/private1FunctionUrl
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11Ry07DMBD8Fu6uKeEA17YSFRJCUYJyjTbOtjgPu/KuW0VR/h3nAak47c7sY2a1kYy2cvsAN9qost40upB9yqBqkSBZ7xSKUMt7Da3sE9ugOJzMFGPbaNWNcM3eDTEYhbGzJ93gIFBFss8uaixm8UHETl+BMfWFQR7JNUusZ/yCYpaY+ZXbEVmlgbU1f80i9kVQXlb8at/7mHNGFxqOQfcG3eJkQTsOt363aFikqLzT3B2d9ZfJwj0xiAbaogTZf0CHLkNHi5X/+M0bNdocBD3nQIRMcjeGgOXeqxp5D4TLvtzYEiuSn1NYZ6eJ8IizNufp4OUbgxgHZEWP16dX+RJeV5HWG+cN6xZlMscfApeuydYBAAA=
    Metadata:
      aws:cdk:path: ts-lambda-stack-develop/CDKMetadata/Default
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

